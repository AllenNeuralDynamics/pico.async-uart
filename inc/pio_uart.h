#ifndef PIO_UART_H
#define PIO_UART_H
#ifdef __cplusplus
extern "C" {
#endif

#include <pico/stdlib.h>
#include <hardware/clocks.h>
#include <hardware/dma.h>
#include <hardware/pio.h>
#include <pio_uart.pio.h> // autogenerated


/// These Macros are from the the new PicoSDK
/// FIXME: remove PIO_NUM macro once we update to Pico SDK 2.0.0 or higher.
#ifndef PIO_NUM
static_assert(PIO1_BASE - PIO0_BASE == (1u << 20), "hardware layout mismatch");
#define PIO_NUM(pio) (((uintptr_t)(pio) - PIO0_BASE) >> 20)
#endif

/// FIXME: remove PIO_DREQ_NUM macro once we update to Pico SDK 2.0.0 or higher.
#ifndef PIO_DREQ_NUM
static_assert(DREQ_PIO0_TX1 == DREQ_PIO0_TX0 + 1, "");
static_assert(DREQ_PIO0_TX2 == DREQ_PIO0_TX0 + 2, "");
static_assert(DREQ_PIO0_TX3 == DREQ_PIO0_TX0 + 3, "");
static_assert(DREQ_PIO0_RX0 == DREQ_PIO0_TX0 + NUM_PIO_STATE_MACHINES, "");
static_assert(DREQ_PIO1_RX0 == DREQ_PIO1_TX0 + NUM_PIO_STATE_MACHINES, "");
#define PIO_DREQ_NUM(pio, sm, is_tx) ((sm) + (((is_tx) ? 0 : NUM_PIO_STATE_MACHINES) + PIO_NUM(pio) * (DREQ_PIO1_TX0 - DREQ_PIO0_TX0)))
#endif

void pio_uart_tx_program_init(PIO pio, uint32_t sm, uint32_t offset,
                              uint32_t pin_tx, uint32_t baud);

void pio_uart_tx_program_putc(PIO pio, uint32_t sm, char c);

void pio_uart_tx_program_puts(PIO pio, uint32_t sm, const char* s);

void dispatch_pio_uart_stream(uint dma_chan, PIO pio, uint32_t sm,
                              uint8_t* starting_address, size_t word_count);

#ifdef __cplusplus
}
#endif
#endif // PIO_UART_H
